---
# Source: rancher-monitoring/charts/operator/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.2
    heritage: Helm
    release: RELEASE-NAME
  name: prometheus-operator-RELEASE-NAME
imagePullSecrets: 
  null
---
# Source: rancher-monitoring/charts/prometheus/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: prometheus
    chart: prometheus-0.0.1
    heritage: Helm
    release: RELEASE-NAME
  name: prometheus-RELEASE-NAME
imagePullSecrets: 
  null
---
# Source: rancher-monitoring/charts/prometheus/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: prometheus
    chart: prometheus-0.0.1
    heritage: Helm
    release: RELEASE-NAME
  name: prometheus-RELEASE-NAME-additional-scrape-configs
stringData:
  additional-scrape-configs.yaml: "\n\n- job_name: 'istio/envoy-stats'\n  scrape_interval: 15s\n  metrics_path: /stats/prometheus\n  kubernetes_sd_configs:\n    - role: pod\n  relabel_configs:\n    - source_labels: [__meta_kubernetes_pod_container_port_name]\n      action: keep\n      regex: '.*-envoy-prom'\n    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n      action: replace\n      regex: ([^:]+)(?::\\d+)?;(\\d+)\n      replacement: $1:15090\n      target_label: __address__\n    - action: labelmap\n      regex: __meta_kubernetes_pod_label_(.+)\n    - source_labels: [__meta_kubernetes_namespace]\n      action: replace\n      target_label: namespace\n    - source_labels: [__meta_kubernetes_pod_name]\n      action: replace\n      target_label: pod_name\n- job_name: 'istio/istio-mesh'\n  scrape_interval: 15s\n  kubernetes_sd_configs:\n    - role: endpoints\n      namespaces:\n        names:\n          - istio-system\n  relabel_configs:\n    - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n      action: keep\n      regex: istio-telemetry;prometheus\n  metric_relabel_configs:\n    - source_labels: [source_workload_namespace]\n      action: replace\n      target_label: namespace\n- job_name: 'istio/istio-policy'\n  scrape_interval: 15s\n  kubernetes_sd_configs:\n    - role: endpoints\n      namespaces:\n        names:\n          - istio-system\n  relabel_configs:\n    - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n      action: keep\n      regex: istio-policy;http-monitoring\n- job_name: 'istio/istio-telemetry'\n  scrape_interval: 15s\n  kubernetes_sd_configs:\n    - role: endpoints\n      namespaces:\n        names:\n          - istio-system\n  relabel_configs:\n    - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n      action: keep\n      regex: istio-telemetry;http-monitoring\n- job_name: 'istio/pilot'\n  scrape_interval: 15s\n  kubernetes_sd_configs:\n    - role: endpoints\n      namespaces:\n        names:\n          - istio-system\n  relabel_configs:\n    - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n      action: keep\n      regex: istio-pilot;http-monitoring\n- job_name: 'istio/galley'\n  scrape_interval: 15s\n  kubernetes_sd_configs:\n    - role: endpoints\n      namespaces:\n        names:\n          - istio-system\n  relabel_configs:\n    - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n      action: keep\n      regex: istio-galley;http-monitoring\n- job_name: 'istio/citadel'\n  scrape_interval: 15s\n  kubernetes_sd_configs:\n    - role: endpoints\n      namespaces:\n        names:\n          - istio-system\n  relabel_configs:\n    - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n      action: keep\n      regex: istio-citadel;http-monitoring\n- job_name: 'prometheus-io-scrape'\n  kubernetes_sd_configs:\n  - role: pod\n    namespaces:\n      names:\n      - ingress-nginx\n      - ingress-controller\n      - kube-system\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\n    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n    action: replace\n    target_label: __address__\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n  - source_labels: [__meta_kubernetes_pod_node_name]\n    action: replace\n    target_label: node\n    regex: (.+)\n    replacement: $1\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: namespace\n    regex: (.+)\n    replacement: $1\n  - source_labels: [__meta_kubernetes_pod_name]\n    action: replace\n    target_label: pod\n    regex: (.+)\n    replacement: $1\n  - source_labels: [__meta_kubernetes_pod_ip]\n    action: replace\n    target_label: pod_ip\n    regex: (.+)\n    replacement: $1\n  - source_labels: [__meta_kubernetes_pod_host_ip]\n    action: replace\n    target_label: host_ip\n    regex: (.+)\n    replacement: $1\n  - source_labels: [__meta_kubernetes_pod_controller_kind]\n    action: replace\n    target_label: created_by_kind\n    regex: (.+)\n    replacement: $1\n  - source_labels: [__meta_kubernetes_pod_controller_name]\n    action: replace\n    target_label: created_by_kind\n    regex: (.+)\n    replacement: $1"
---
# Source: rancher-monitoring/charts/prometheus/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: prometheus
    chart: prometheus-0.0.1
    heritage: Helm
    release: RELEASE-NAME
  name: prometheus-RELEASE-NAME-additional-alertmanager-configs
stringData:
  additional-alertmanager-configs.yaml: "\n"
---
# Source: rancher-monitoring/charts/prometheus/templates/nginx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-RELEASE-NAME-nginx
  labels:
    app: prometheus
    chart: prometheus-0.0.1
    heritage: Helm
    release: RELEASE-NAME
data:
  run-sh.tmpl: |-
    #!/bin/sh
    set -e

    srcpath="/nginx/nginx-conf.tmpl"
    dstpath="/var/cache/nginx/nginx.conf"

    if ! [ -f $srcpath ]; then
      exit 1
    fi

    mkdir -p /var/cache/nginx/cache

    token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
    sed "s/REPLACE_PARAM_AUTHORIZATION/Bearer ${token}/g" $srcpath | sed "s/REPLACE_PARAM_IP/${POD_IP}/g" > $dstpath
    
    exec nginx -g "daemon off;" -c /var/cache/nginx/nginx.conf

  nginx-conf.tmpl: |-
    worker_processes      auto;
    error_log             /dev/stdout warn;
    pid                   /var/cache/nginx/nginx.pid;

    events {
       worker_connections 1024;
    }

    http {
      include       /etc/nginx/mime.types;
      log_format    main '[$time_local - $status] $remote_addr - $remote_user $request ($http_referer)';

      proxy_connect_timeout       10;
      proxy_read_timeout          180;
      proxy_send_timeout          5;
      proxy_buffering             off;
      proxy_cache_path            /var/cache/nginx/cache levels=1:2 keys_zone=my_zone:100m inactive=1d max_size=10g;

      server {
        listen          8081;
        access_log      off;

        gzip            on;
        gzip_min_length 1k;
        gzip_comp_level 2;
        gzip_types      text/plain application/javascript application/x-javascript text/css application/xml text/javascript image/jpeg image/gif image/png;
        gzip_vary       on;
        gzip_disable    "MSIE [1-6]\.";

        proxy_set_header    Host $host;
        proxy_set_header    Authorization "REPLACE_PARAM_AUTHORIZATION";
        proxy_pass_header   Authorization;

        location / {
          proxy_cache         my_zone;
          proxy_cache_valid   200 302 1d;
          proxy_cache_valid   301 30d;
          proxy_cache_valid   any 5m;
          proxy_cache_bypass  $http_cache_control;
          add_header          X-Proxy-Cache $upstream_cache_status;
          add_header          Cache-Control "public";

          proxy_pass          http://REPLACE_PARAM_IP:9090/;

          sub_filter_types    text/html;
          sub_filter_once     off;
          sub_filter          'var PATH_PREFIX = "";' 'var PATH_PREFIX = ".";';

          if ($request_filename ~ .*\.(?:js|css|jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm)$) {
            expires             90d;
          }
        }
      }
    }
---
# Source: rancher-monitoring/charts/prometheus/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: prometheus-cluster-monitoring-db-prometheus-cluster-monitoring-0
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-path
  hostPath:
    path: /cogdata/prometheus
    type: DirectoryOrCreate
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: prometheus
              operator: In
              values:
                - master
---
# Source: rancher-monitoring/charts/prometheus/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: prometheus-cluster-monitoring-db-prometheus-cluster-monitoring-0
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Source: rancher-monitoring/charts/operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-operator-RELEASE-NAME
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.2
    heritage: Helm
    release: RELEASE-NAME
rules:
- apiGroups: 
  - monitoring.coreos.com
  resources: 
  - alertmanager
  - alertmanagerconfigs
  - alertmanagers
  - prometheus
  - prometheuses
  - service-monitor
  - servicemonitors
  - thanosrulers
  - thanosrulers/finalizers
  - prometheusrules
  - prometheuses/finalizers
  - alertmanagers/finalizers
  - podmonitors
  - probes
  verbs: 
  - "*"
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs: 
  - "*"
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  verbs: 
  - "*"
- apiGroups: [""]
  resources:
  - pods
  verbs: 
  - list
  - delete
- apiGroups: [""]
  resources:
  - services
  - services/finalizers
  - endpoints
  verbs: 
  - get
  - create
  - update
  - delete
- apiGroups: [""]
  resources:
  - nodes
  verbs: 
  - list
  - watch
- apiGroups: [""]
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
---
# Source: rancher-monitoring/charts/prometheus/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: prometheus
    chart: prometheus-0.0.1
    heritage: Helm
    release: RELEASE-NAME
  name: prometheus-RELEASE-NAME-default
rules:
- nonResourceURLs: 
  - "/metrics"
  verbs:
  - "get"
- apiGroups:
  - "extensions"
  - "networking.k8s.io"
  verbs: 
  - "list"
  - "watch"
  resources:
  - ingresses
- apiGroups: 
  - ""
  verbs: 
  - "list"
  - "watch"
  resources:
  - services
  - endpoints
  - pods
  - nodes
- apiGroups:
  - ""
  resources:
  - nodes/metrics
  verbs:
  - "get"
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - "list"
  - "watch"
  - "get"
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - "create"
---
# Source: rancher-monitoring/charts/operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-operator-RELEASE-NAME
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.2
    heritage: Helm
    release: RELEASE-NAME
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-operator-RELEASE-NAME
subjects:
  - kind: ServiceAccount
    name: prometheus-operator-RELEASE-NAME
    namespace: default
---
# Source: rancher-monitoring/charts/prometheus/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: prometheus
    chart: prometheus-0.0.1
    heritage: Helm
    release: RELEASE-NAME
  name: prometheus-RELEASE-NAME-default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-RELEASE-NAME-default
subjects:
  - kind: ServiceAccount
    name: prometheus-RELEASE-NAME
    namespace: default
---
# Source: rancher-monitoring/charts/operator/templates/deployment.yaml
apiVersion: v1
kind: Service
metadata:
  name: expose-kubelets-metrics
  labels:
    k8s-app: kubelet
    monitoring.coreos.com: "true"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: https-metrics
    port: 10250
    targetPort: 10250
---
# Source: rancher-monitoring/charts/operator/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: expose-operator-metrics
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.2
    heritage: Helm
    release: RELEASE-NAME
    monitoring.coreos.com: "true"
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: prometheus-operator
    chart: prometheus-operator-0.0.2
    release: RELEASE-NAME
  ports:
    - name: metrics
      port: 47323
      targetPort: http
---
# Source: rancher-monitoring/charts/prometheus/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: expose-prometheus-metrics
  labels:
    app: prometheus
    chart: prometheus-0.0.1
    heritage: Helm
    release: RELEASE-NAME
    monitoring.coreos.com: "true"
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: prometheus
    chart: prometheus-0.0.1
    release: RELEASE-NAME
  ports:
  - name: metrics
    port: 9090
    targetPort: web
---
# Source: rancher-monitoring/charts/prometheus/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: access-prometheus
  labels:
    app: prometheus
    chart: prometheus-0.0.1
    heritage: Helm
    release: RELEASE-NAME
    kubernetes.io/cluster-service: "true"
spec:
  type: ClusterIP
  sessionAffinity: ClientIP
  selector:
    app: prometheus
    chart: prometheus-0.0.1
    release: RELEASE-NAME
  ports:
    - name: nginx-http
      port: 80
      targetPort: nginx-http
---
# Source: rancher-monitoring/charts/operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.2
    heritage: Helm
    release: RELEASE-NAME
  name: prometheus-operator-RELEASE-NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-operator
      chart: prometheus-operator-0.0.2
      release: RELEASE-NAME
  template:
    metadata:
      labels:
        app: prometheus-operator
        chart: prometheus-operator-0.0.2
        release: RELEASE-NAME
    spec:
      containers:
        - name: prometheus-operator
          image: rancher/mirrored-prometheus-operator-prometheus-operator:v0.48.0
          args:
            - --kubelet-service=default/expose-kubelets-metrics
            - --log-format=logfmt
            - --log-level=info
            - --prometheus-config-reloader=rancher/mirrored-prometheus-operator-prometheus-config-reloader:v0.48.0
            - --labels=monitoring.coreos.com=true
          ports:
          - containerPort: 8080
            name: http
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: prometheus-operator-RELEASE-NAME
      tolerations:
        - key: "cattle.io/os"
          value: "linux"
          effect: "NoSchedule"
          operator: "Equal"
---
# Source: rancher-monitoring/charts/prometheus/templates/prometheus.yaml
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    app: prometheus
    chart: prometheus-0.0.1
    heritage: Helm
    release: RELEASE-NAME
  name: RELEASE-NAME
spec:
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  containers:
  - name: prometheus-proxy
    command:
    - /bin/sh
    - -c 
    - cp /nginx/run-sh.tmpl /var/cache/nginx/nginx-start.sh; chmod +x /var/cache/nginx/nginx-start.sh; /var/cache/nginx/nginx-start.sh
    env:
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: rancher/mirrored-library-nginx:1.21.1-alpine
    ports:
    - containerPort: 8081
      name: nginx-http
      protocol: TCP
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
    securityContext:
      runAsUser: 101
      runAsGroup: 101
    volumeMounts:
    - mountPath: /nginx
      name: configmap-prometheus-RELEASE-NAME-nginx
    - mountPath: /var/cache/nginx
      name: nginx-home
  - name: prometheus-agent
    command:
    - prometheus-auth
    args:
      - --proxy-url=http://127.0.0.1:9090
      - --listen-address=$(POD_IP):9090
      - --filter-reader-labels=prometheus
      - --filter-reader-labels=prometheus_replica
    env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
    image: rancher/prometheus-auth:v0.2.2
    ports:
    - containerPort: 9090
      name: web
      protocol: TCP
    livenessProbe:
      failureThreshold: 6
      httpGet:
        path: /-/healthy
        port: web
        scheme: HTTP
      initialDelaySeconds: 300
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    readinessProbe:
      failureThreshold: 10
      httpGet:
        path: /-/ready
        port: web
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    resources:
      limits:
        cpu: 500m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi
  listenLocal: true
  podMetadata:
    creationTimestamp: "2022-03-09T14:30:27Z"
    labels:
      app: prometheus
      chart: prometheus-0.0.1
      release: RELEASE-NAME
  image: rancher/mirrored-prometheus-prometheus:v2.27.1
  nodeSelector:
    kubernetes.io/os: linux
  paused: false
  replicas: 1
  logLevel:  info
  logFormat: logfmt
  scrapeInterval: 60s
  evaluationInterval: 60s
  resources:
    limits:
      cpu: 1000m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 100Mi
  retention: "24h"
  configMaps:
  - prometheus-RELEASE-NAME-nginx
  serviceAccountName: prometheus-RELEASE-NAME
  serviceMonitorNamespaceSelector:
    
    matchExpressions:
  serviceMonitorSelector:
    matchExpressions: []
  ruleNamespaceSelector:
    
    matchExpressions:
  ruleSelector:
    matchExpressions:
  storage:
    disableMountSubPath: true
    volumeClaimTemplate:
      metadata:
        creationTimestamp: "2022-03-09T14:30:27Z"
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: local-path
        volumeName: prometheus-cluster-monitoring-db-prometheus-cluster-monitoring-0
  volumes:
  - name: nginx-home
    emptyDir: {}
  version: "v2.27.1"
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app: prometheus
              prometheus: RELEASE-NAME
  tolerations:
    - key: "cattle.io/os"
      value: "linux"
      effect: "NoSchedule"
      operator: "Equal"
  additionalScrapeConfigs:
    name: prometheus-RELEASE-NAME-additional-scrape-configs
    key: additional-scrape-configs.yaml
  additionalAlertManagerConfigs:
    name: prometheus-RELEASE-NAME-additional-alertmanager-configs
    key: additional-alertmanager-configs.yaml
---
# Source: rancher-monitoring/charts/operator/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.2
    heritage: Helm
    release: RELEASE-NAME
    source: rancher-monitoring
  name: prometheus-operator-RELEASE-NAME
spec:
  selector:
    matchLabels:
      app: prometheus-operator
      chart: prometheus-operator-0.0.2
      release: RELEASE-NAME
      monitoring.coreos.com: "true"
  namespaceSelector:
    matchNames:
    - "default"
  endpoints:
  - port: metrics
    honorLabels: true
    relabelings:
    - sourceLabels:
      - __meta_kubernetes_pod_host_ip
      action: replace
      targetLabel: host_ip
      regex: (.+)
      replacement: $1
    - sourceLabels:
      - __meta_kubernetes_pod_node_name
      action: replace
      targetLabel: node
      regex: (.+)
      replacement: $1
---
# Source: rancher-monitoring/charts/prometheus/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: prometheus
    chart: prometheus-0.0.1
    heritage: Helm
    release: RELEASE-NAME
    source: rancher-monitoring
  name: prometheus-RELEASE-NAME
spec:
  selector:
    matchLabels:
      app: prometheus
      chart: prometheus-0.0.1
      release: RELEASE-NAME
      monitoring.coreos.com: "true"
  namespaceSelector:
    matchNames:
    - "default"
  endpoints:
  - port: metrics
    relabelings:
    - sourceLabels:
      - __meta_kubernetes_pod_host_ip
      targetLabel: host_ip
      action: replace
      regex: (.+)
      replacement: $1
    - sourceLabels:
      - __meta_kubernetes_pod_node_name
      targetLabel: node
      action: replace
      regex: (.+)
      replacement: $1
  - port: metrics
    path: /_/metrics
    metricRelabelings: 
    - sourceLabels: 
      - job
      targetLabel: job
      action: replace
      regex: (.+)
      replacement: expose-prometheus-auth-metrics
    relabelings:
    - sourceLabels:
      - __meta_kubernetes_pod_host_ip
      targetLabel: host_ip
      action: replace
      regex: (.+)
      replacement: $1
    - sourceLabels:
      - __meta_kubernetes_pod_node_name
      targetLabel: node
      action: replace
      regex: (.+)
      replacement: $1
